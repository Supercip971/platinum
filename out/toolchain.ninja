rule cxx
  command = clang++ -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_cc} -c ${in} -o ${out}
  description = CXX ${out}
  depfile = ${out}.d
  deps = gcc
rule alink
  command = rm -f ${out} && ar rcs ${out} ${in}
  description = AR ${target_output_name}${output_extension}
rule link
  command = clang++ ${ldflags} -o ${target_output_name}${output_extension} -Wl,--start-group @${target_output_name}${output_extension}.rsp ${solibs} -Wl,--end-group ${libs}
  description = LINK ${target_output_name}${output_extension}
  rspfile = ${target_output_name}${output_extension}.rsp
  rspfile_content = ${in}
rule solink
  command = clang++ -shared ${ldflags} -o ${output_dir}/${target_output_name}${output_extension} -soname=${target_output_name}${output_extension} @${target_output_name}${output_extension}.rsp
  description = SOLINK ${target_output_name}${output_extension}
  rspfile = ${target_output_name}${output_extension}.rsp
  rspfile_content = --whole-archive ${in} ${solibs} --no-whole-archive ${libs}
rule stamp
  command = touch ${out}
  description = STAMP ${out}
rule cc
  command = clang -MMD -MF ${out}.d ${defines} ${include_dirs} ${cflags} ${cflags_c} -c ${in} -o ${out}
  description = CC ${out}
  depfile = ${out}.d
  deps = gcc
rule copy
  command = cp -af ${in} ${out}
  description = COPY ${in} ${out}

build obj/samples.stamp: stamp hello_world
subninja obj/sample/hello_world/hello_world.ninja
